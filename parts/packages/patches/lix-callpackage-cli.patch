From c2cbfa20d7a86517945d4586ac9170793924eae9 Mon Sep 17 00:00:00 2001
From: isabel <isabel@isabelroses.com>
Date: Fri, 6 Dec 2024 11:31:53 +0000
Subject: [PATCH] feat(cli): add callPackage flag

adds a --call-package or -C cli option to build a package from the cli
based on the work of https://github.com/privatevoid-net/nix-super
---
 lix/libcmd/command.hh      |  1 +
 lix/libcmd/installables.cc | 25 +++++++++++++++++++++----
 2 files changed, 22 insertions(+), 4 deletions(-)

diff --git a/lix/libcmd/command.hh b/lix/libcmd/command.hh
index 90199145c..97safe5a8f 100644
--- a/lix/libcmd/command.hh
+++ b/lix/libcmd/command.hh
@@ -111,6 +111,7 @@ struct SourceExprCommand : virtual Args, MixFlakeOptions
 {
     std::optional<Path> file;
     std::optional<std::string> expr;
+    std::optional<Path> callPackageFile;
 
     SourceExprCommand();
 
diff --git a/lix/libcmd/installables.cc b/lix/libcmd/installables.cc
index 9970d4319..8a229e76c 100644
--- a/lix/libcmd/installables.cc
+++ b/lix/libcmd/installables.cc
@@ -165,6 +165,19 @@ SourceExprCommand::SourceExprCommand()
         .labels = {"expr"},
         .handler = {&expr}
     });
+
+    addFlag({
+        .longName = "call-package",
+        .shortName = 'C',
+        .description =
+            "Interpret [*installables*](@docroot@/command-ref/new-cli/nix.md#installables) as attribute paths relative to the callPackageable Nix expression stored in *file*. "
+            "The `callPackage` function is taken from `<nixpkgs>`. "
+            "Implies `--impure`.",
+        .category = installablesCategory,
+        .labels = {"file"},
+        .handler = {&callPackageFile},
+        .completer = completePath
+    });
 }
 
 MixReadOnlyOption::MixReadOnlyOption()
@@ -428,7 +441,7 @@ ref<eval_cache::EvalCache> openEvalCache(
 ref<eval_cache::CachingEvaluator> SourceExprCommand::getEvaluator()
 {
     // FIXME: backward compatibility hack
-    if (file) {
+    if (file || callPackageFile) {
         evalSettings.pureEval.override(false);
     }
 
@@ -440,9 +453,9 @@ Installables SourceExprCommand::parseInstallables(
 {
     Installables result;
 
-    if (file || expr) {
-        if (file && expr)
-            throw UsageError("'--file' and '--expr' are exclusive");
+    if (file || expr || callPackageFile) {
+        if ((file && expr) || (file && callPackageFile) || (expr && callPackageFile))
+            throw UsageError("'--file', '--expr' and '--call-package' are exclusive");
 
         auto evaluator = getEvaluator();
         auto vFile = evaluator->mem.allocValue();
@@ -453,6 +466,10 @@ Installables SourceExprCommand::parseInstallables(
         }
         else if (file)
             state.evalFile(lookupFileArg(*evaluator, *file), *vFile);
+        else if (callPackageFile) {
+            auto & e = evaluator->parseExprFromString(fmt("(import <nixpkgs> {}).callPackage %s {}", CanonPath::fromCwd(*callPackageFile)), CanonPath::fromCwd());
+            state.eval(e, *vFile);
+        }
         else {
             auto & e = evaluator->parseExprFromString(*expr, CanonPath::fromCwd());
             state.eval(e, *vFile);
-- 
2.44.1
