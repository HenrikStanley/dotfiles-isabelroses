diff --git c/src/libcmd/command.hh i/src/libcmd/command.hh
index 6c6c81718..f19f44225 100644
--- c/src/libcmd/command.hh
+++ i/src/libcmd/command.hh
@@ -115,6 +115,7 @@ struct SourceExprCommand : virtual Args, MixFlakeOptions
 {
     std::optional<Path> file;
     std::optional<std::string> expr;
+    std::optional<Path> callPackageFile;
 
     SourceExprCommand();
 
diff --git c/src/libcmd/installables.cc i/src/libcmd/installables.cc
index 711cf1b07..059318400 100644
--- c/src/libcmd/installables.cc
+++ i/src/libcmd/installables.cc
@@ -165,6 +165,19 @@ SourceExprCommand::SourceExprCommand()
         .labels = {"expr"},
         .handler = {&expr}
     });
+
+    addFlag({
+        .longName = "call-package",
+        .shortName = 'C',
+        .description =
+            "Interpret [*installables*](@docroot@/command-ref/new-cli/nix.md#installables) as attribute paths relative to the callPackageable Nix expression stored in *file*. "
+            "The `callPackage` function is taken from `<nixpkgs>`. "
+            "Implies `--impure`.",
+        .category = installablesCategory,
+        .labels = {"file"},
+        .handler = {&callPackageFile},
+        .completer = completePath
+    });
 }
 
 MixReadOnlyOption::MixReadOnlyOption()
@@ -430,12 +443,12 @@ Installables SourceExprCommand::parseInstallables(
 {
     Installables result;
 
-    if (file || expr) {
-        if (file && expr)
-            throw UsageError("'--file' and '--expr' are exclusive");
+    if (file || expr || callPackageFile) {
+        if ((file && expr) || (file && callPackageFile) || (expr && callPackageFile))
+            throw UsageError("'--file', '--expr' and '--call-package' are exclusive");
 
         // FIXME: backward compatibility hack
-        if (file) evalSettings.pureEval = false;
+        if (file || callPackageFile) evalSettings.pureEval = false;
 
         auto state = getEvalState();
         auto vFile = state->allocValue();
@@ -446,7 +459,10 @@ Installables SourceExprCommand::parseInstallables(
         }
         else if (file)
             state->evalFile(lookupFileArg(*state, *file), *vFile);
-        else {
+        else if (callPackageFile) {
+            auto & e = state->parseExprFromString(fmt("(import <nixpkgs> {}).callPackage %s {}", CanonPath::fromCwd(*callPackageFile)), state->rootPath(CanonPath::fromCwd()));
+            state->eval(e, *vFile);
+        } else {
             auto & e = state->parseExprFromString(*expr, state->rootPath(CanonPath::fromCwd()));
             state->eval(e, *vFile);
         }

